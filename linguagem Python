---link---
https://panda.ime.usp.br/pensepy/static/pensepy/index.html

print("Hello, word!") /imprimir algo na tela;

===Variaveis===
<var> = input(<algo>) /colocar algo na var
print("...{}..{}.".format(<var>, <var>)) /faz com que a var seja imprimida 
print(<var1>, <var2>, <var3>) /imprime var

===tipos primitivos===
int /inteiro
float /ponto flutuante ({:.nf})
bool /logicos, boleanos
str /strings

===numeros===
<var> = int(input('')) /recebe um numero inteiro
 os "numeros" no pint

===saber qual o tipo===
print(<var>, is...()) \tipo uma bibli.
isalpha(): Verifica se todos os caracteres da string são letras do alfabeto (não inclui espaços ou números).
isdigit(): Verifica se todos os caracteres da string são dígitos numéricos (0 a 9).
isalnum(): Verifica se todos os caracteres da string são alfanuméricos, ou seja, letras (alfabeto) ou números.
islower(): Verifica se todos os caracteres da string estão em minúsculas.
isupper(): Verifica se todos os caracteres da string estão em maiúsculas.
isspace(): Verifica se a string consiste apenas em espaços em branco (espaços, tabulações, quebras de linha, etc.).

===operações aritmétricas===
+ /adição
- /subtração
* /mult
'/' /divisão
** /potenciação
'//' /divisão inteira
% /modulo, resto da divisão
sqrt() /raiz quadrada

---line---
print('...'.format(<var>), end='') /não quebrar linha
\n /quebra a linha

===for===
for <cont> in range(<type>):
  <comando>
/termina quando a identação for quebrada

---<type>---
(i, f):i = inicio, f = fim
(i, f, p):i = inicio, f = fim, p = passo

===if===
if <condição>:
  <comando>
elif <condição>: /caso tenha mais de um senão
  <comando> 
else:
  <comando> /e o ultimo senão
...

-/termina quando a identação for quebrada


===módulos===
import<biblio> /importa tudo na biblio
form<biblio>import<obj>,<obj>
biblio."..." /maneira de ultili\ar a biblio

===comando para===
for <variavel> in range(<tipos>):
   comandos

---tipos---
(n) o mais padrão começa em 0 porem vai ate n-1, ou seja, coloque n+1;
(<n>, <n1>) o padrão; se começar em 0, vai ate o numero desejado;
(<n>, <n1>, <pulos>) faz ir de n em n numeros;

===lista===
---estrutura
<var> = [..., ...]
<var> = "..."
<var> = list() lista vazia

---add---
<lista>.append('') adiciona um elemento ao final da lista, e também um indice
<lista>.insert(i, '') adiciona um elemento no i indicado, os depois dele são atualizados (i+1)

---apagar---
<lista>.pop() apaga o ultimo elemento
<lista>.pop(i) apaga o elemento daquele indice


<lista> = list(range(i,i2)) lista com numero ordenados e automaticos

<lista>.sort() ordenar valores, <lista>.sort(reverse=true) ordena em iverso
len(<lista>) mostra quanto elementos tem naquela lista

for i in <lista>:
  print('{i}') mostra o elemento

for i, v in enumerate(<lista>):
  print('{i}...{v}') o i mostra o indice e o v mostra o elemento

for i in range(0, 5):
  <lista>.append(<type>('')))

a = b[:] copia os elmntos de b para a

===função===
def <namefunc>():
  <prog>

---def editvel por programa---
def func(<var que vai receber>)   \pode ser masi de uma, (<var1>, <var2>, ..., <varN>). para que ele receba a variavel, o camando tem que ser estritamente igual a o da função
   <prog>
   print(<var>)
   <prog>

func(...)
-----------------------------
Ex:
def mensagem(msg)
   print("----")
   print(msg)
   print("----")

mensagem("...")

===string===

---fatiamneto---
<var>[n:n1] pega de um inde e aoutro indice de uma string
<var>[n:n1:p] sendo p uma variavel de pulo

---analise---
len(<var>) temanho
<var>.count('<letra>') conta quantas vezes aparece  letra
<var>.find('mini frase') mostra emque momento cmc a mini frase, -1 para se a mini frase não existir na frase
''frase in <var>: boleano

---transformação---
<var>.replace('mini frase da frase', 'nova mini frase') altera o q esta dentro da string
<var>.upper() transforma tudo em MAIUSCULO
<var>.lower() transforma tudo em minuscula()
<var>.capitalize() colocar tudo em minusculo, menos o de indice 0
frase.strip() remove espacos inulteis, do cmc e do final

---divisão---
<varf>.split() divide a frase en relação aos espacos

---junção---
